CMAKE_MINIMUM_REQUIRED (VERSION 3.1)
PROJECT (mqtt_cpp)

IF ((CMAKE_VERSION VERSION_GREATER 3.1) OR
	(CMAKE_VERSION VERSION_EQUAL 3.1))
    CMAKE_POLICY(SET CMP0054 NEW)
ENDIF ()

option(MQTT_NO_TLS "Disable TLS" ON)
option(MQTT_USE_WS "Enable WebSockets" OFF)
option(MQTT_BUILD_EXAMPLES "" OFF)
option(MQTT_BUILD_TESTING "" OFF)


add_library(mqtt_cpp INTERFACE)

target_compile_features(mqtt_cpp INTERFACE "cxx_std_14")
target_include_directories(mqtt_cpp
	INTERFACE
	    "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
		"$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
)

set(MQTT_DEFS "")

IF (MQTT_NO_TLS)
    LIST(APPEND MQTT_DEFS "MQTT_NO_TLS")
ELSE ()
    MESSAGE (STATUS "TLS enabled")
	FIND_PACKAGE (OpenSSL)
ENDIF ()

IF (MQTT_USE_WS)
    LIST(APPEND MQTT_DEFS "MQTT_USE_WS")
ELSE ()
    MESSAGE (STATUS "WebSocket disabled")
ENDIF ()

target_compile_definitions(mqtt_cpp INTERFACE ${MQTT_DEFS})

IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    SET (CMAKE_CXX_FLAGS "/bigobj ${CMAKE_CXX_FLAGS}")
ENDIF ()

FIND_PACKAGE (Boost 1.66.0 COMPONENTS chrono timer test_exec_monitor system)
FIND_PACKAGE (Threads)


IF (NOT MQTT_NO_TLS)
    set(MQTT_TLS_INCL
		${OpenSSL_INCLUDE_DIR}
		${MQTT_OPENSSL_INCLUDE_DIR}
	)
ENDIF ()

target_include_directories(mqtt_cpp
	INTERFACE
	    ${Boost_INCLUDE_DIR}
		${MQTT_BEAST_INCLUDE_DIR}
		${MQTT_TLS_INCL}
		include
)

if(MQTT_BUILD_EXAMPLES)
	add_subdirectory(example)
endif()

if(MQTT_BUILD_TESTING)
	ENABLE_TESTING ()
	add_subdirectory(test)
endif()

# Doxygen
FIND_PACKAGE (Doxygen)
IF (DOXYGEN_FOUND)
    LIST (APPEND Doxyfile_CONTENT
		COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		COMMAND ${CMAKE_COMMAND} -E echo "FILE_PATTERNS      = *.hpp" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		COMMAND ${CMAKE_COMMAND} -E echo "OUTPUT_DIRECTORY   = doc" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		COMMAND ${CMAKE_COMMAND} -E echo "PROJECT_NAME       = \"mqtt_cpp\"" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		COMMAND ${CMAKE_COMMAND} -E echo "EXTRACT_ALL        = YES" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		COMMAND ${CMAKE_COMMAND} -E echo "RECURSIVE          = YES" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		COMMAND ${CMAKE_COMMAND} -E echo "INPUT              = ${CMAKE_CURRENT_SOURCE_DIR}/include" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		)
	IF (DOXYGEN_DOT_FOUND)
	    LIST (APPEND Doxyfile_CONTENT
			COMMAND ${CMAKE_COMMAND} -E echo "HAVE_DOT       = YES" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
			)
	ENDIF ()
	ADD_CUSTOM_TARGET (
		doxygen
		${Doxyfile_CONTENT}
		COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		VERBATIM
		)
ENDIF ()
